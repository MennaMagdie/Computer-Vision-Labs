import numpy as np

def compute_homography_matrix(pts1, pts2):
    assert pts1.shape == pts2.shape, "Input point arrays must have same shape"
    assert pts1.shape[0] >= 4, "At least 4 point correspondences required"

    n = pts1.shape[0]
    A = []

    for i in range(n):
        x, y = pts1[i][0], pts1[i][1]
        x_prime, y_prime = pts2[i][0], pts2[i][1]

        A.append([-x, -y, -1, 0, 0, 0, x * x_prime, y * x_prime, x_prime])
        A.append([0, 0, 0, -x, -y, -1, x * y_prime, y * y_prime, y_prime])

    A = np.asarray(A)
    U, S, Vt = np.linalg.svd(A)
    H = Vt[-1].reshape((3, 3))

    H = H / H[2, 2]  # Normalize
    return H
