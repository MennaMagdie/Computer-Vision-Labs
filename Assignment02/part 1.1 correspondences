import cv2
import numpy as np
import matplotlib.pyplot as plt

def get_top_50_correspondences(book_img_path, book_video_path):
    # Load book image
    img1 = cv2.imread(book_img_path)
    img1_gray = cv2.cvtColor(img1, cv2.COLOR_BGR2GRAY)

    # Load first frame from video
    cap = cv2.VideoCapture(book_video_path)
    ret, frame = cap.read()
    cap.release()
    if not ret:
        raise RuntimeError("Failed to read the first frame from video.")
    img2 = frame
    img2_gray = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)

    # SIFT + BFMatcher
    sift = cv2.SIFT_create()
    kp1, des1 = sift.detectAndCompute(img1_gray, None)
    kp2, des2 = sift.detectAndCompute(img2_gray, None)

    bf = cv2.BFMatcher()
    matches = bf.knnMatch(des1, des2, k=2)

    # Lowe's Ratio Test
    good = []
    for m, n in matches:
        if m.distance < 0.75 * n.distance:
            good.append(m)

    # Select top 50 matches
    top_50_matches = sorted(good, key=lambda x: x.distance)[:50]

    # Visualization
    match_img = cv2.drawMatches(img1, kp1, img2, kp2, top_50_matches, None, flags=2)

    plt.figure(figsize=(14, 7))
    plt.imshow(cv2.cvtColor(match_img, cv2.COLOR_BGR2RGB))
    plt.title("Top 50 Correspondences between Book Image and First Video Frame")
    plt.axis('off')
    plt.show()

    return top_50_matches, kp1, kp2, img1, img2

# Run the function
if __name__ == "__main__":
    book_image_path = r"C:\Users\User\PycharmProjects\pythonProject5\cv_cover.jpg"
    book_video_path = r"C:\Users\User\PycharmProjects\pythonProject5\book.mov"

    get_top_50_correspondences(book_image_path, book_video_path)

